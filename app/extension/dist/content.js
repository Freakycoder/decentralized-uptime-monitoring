import{a as f}from"./chunks/index.xsH4HHeE.js";const l=10*60*1e3,e=8;let o,n=0,i=!1;o=window.location.href;document.addEventListener("DOMContentLoaded",()=>{console.log("Auto-starting monitoring for:",o),g()});function g(){if(i){console.log("Monitoring already active for:",o);return}i=!0,n=0,console.log(`Starting timed monitoring for ${o} - ${e} runs over ${e*l/6e4} minutes`);for(let t=0;t<e;t++)setTimeout(()=>{i&&(n=t+1,console.log(`Running ping ${n} of ${e} for ${o}`),p())},t*l);setTimeout(()=>{i=!1,console.log("Monitoring completed for:",o)},e*l+6e4)}async function p(){if(!i)return;const t=performance.now();let a;try{performance.clearResourceTimings();const r=await f.get(o,{timeout:3e4,headers:{"Cache-Control":"no-cache",Pragma:"no-cache"}});await new Promise(c=>setTimeout(c,1e3));const u=performance.getEntriesByType("resource"),d=performance.getEntriesByType("navigation")[0];let s=null;s=u.find(c=>c.name===o)||null,!s&&d&&(s=d),s?a=T(s,r.status):a={dnsLookup:0,tcpConnection:0,tlsHandshake:0,ttfb:0,contentDownload:0,totalDuration:performance.now()-t,statusCode:r.status};const m={pingData:{[o]:a}};chrome.runtime.sendMessage({action:"PERF_DATA",url:o,data:m,timestamp:Date.now(),runNumber:n,totalRuns:e}),console.log(`Performance data sent for run ${n}:`,a)}catch(r){console.error(`Failed to collect performance data for run ${n}:`,r);const u={pingData:{[o]:{dnsLookup:0,tcpConnection:0,tlsHandshake:0,ttfb:0,contentDownload:0,totalDuration:0,statusCode:0}}};chrome.runtime.sendMessage({action:"PERF_DATA",url:o,data:u,timestamp:Date.now(),runNumber:n,totalRuns:e,error:r||"Request failed"})}}function T(t,a){return{dnsLookup:t.domainLookupEnd-t.domainLookupStart,tcpConnection:t.connectEnd-t.connectStart,tlsHandshake:t.secureConnectionStart>0?t.connectEnd-t.secureConnectionStart:0,ttfb:t.responseStart-t.requestStart,contentDownload:t.responseEnd-t.responseStart,totalDuration:t.responseEnd-t.startTime,statusCode:a}}
