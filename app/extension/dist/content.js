import{a as w}from"./chunks/index.xsH4HHeE.js";const T=new Map,u=10*60*1e3,p=8;let s=0;window.addEventListener("message",async t=>{if(console.log("ðŸŽ§ Content script received message:",t.data),t.origin===window.location.origin&&t.data.type==="START_MONITORING"){const{url:n,websiteId:e,sessionId:a,totalRuns:o=8}=t.data;console.log(`started monitoring for ${n} - Session: ${a}`),T.set(a,{totalRuns:o,currentRun:0}),window.postMessage({type:"MONITORING_STARTED",sessionId:a,url:n,websiteId:e,success:!0},"*"),D(n,e,a,0,o)}});function D(t,n,e,a,o){s=0,chrome.storage.local.set({[t]:{status:"Active",startedAt:Date.now(),sessionId:e}}),console.log(`Starting timed monitoring for ${t} - ${p} runs over ${p*u/6e4} minutes`);for(let r=a;r<o;r++)setTimeout(async()=>{s=r+1,console.log(`Running ping ${s} of ${p} for ${t}`),await A(t,n,e,s,o)},r*u);setTimeout(()=>{chrome.storage.local.set({[t]:{status:"Completed",startedAt:Date.now()}}),console.log("Monitoring completed for:",t)},p*u+5e3)}async function A(t,n,e,a,o){const r=performance.now();let i;try{performance.clearResourceTimings();const c=await w.get(t,{timeout:3e4,headers:{"Cache-Control":"no-cache",Pragma:"no-cache"}});await new Promise(m=>setTimeout(m,1e3));const g=performance.getEntriesByType("resource"),l=performance.getEntriesByType("navigation")[0];let d=null;if(d=g.find(m=>m.name===t)||null,!d&&l&&(d=l),d)i=C(d,c.status,n);else{const m=performance.now();i={website_id:n,dnsLookup:0,tcpConnection:0,tlsHandshake:0,ttfb:0,contentDownload:0,totalDuration:m-r,statusCode:c.status}}const f={pingData:{[t]:i}};chrome.runtime.sendMessage({action:"PERF_DATA",url:t,data:f,timestamp:Date.now(),runNumber:s,totalRuns:o}),console.log(`Performance data sent for run ${s}:`,i),window.postMessage({type:"MONITORING_UPDATE",sessionId:e,url:t,runNumber:a,totalRuns:o,success:!0,statusCode:i.statusCode,responseTime:i.totalDuration,timestamp:Date.now()},"*"),a===o&&chrome.storage.local.set({[t]:{status:"Completed",startedAt:Date.now(),sessionId:e}})}catch(c){console.error(`Failed to collect performance data for run ${s}:`,c);const g={pingData:{[t]:{website_id:n,dnsLookup:0,tcpConnection:0,tlsHandshake:0,ttfb:0,contentDownload:0,totalDuration:0,statusCode:0}}};chrome.runtime.sendMessage({action:"PERF_DATA",url:t,data:g,timestamp:Date.now(),runNumber:s,totalRuns:o,error:c||"Request failed"}),window.postMessage({type:"MONITORING_UPDATE",sessionId:e,url:t,runNumber:a,totalRuns:o,success:!0,statusCode:404,responseTime:0,timestamp:Date.now()},"*"),a===o&&chrome.storage.local.set({[t]:{status:"Completed",startedAt:Date.now(),sessionId:e}})}}function C(t,n,e){return{website_id:e,dnsLookup:t.domainLookupEnd-t.domainLookupStart,tcpConnection:t.connectEnd-t.connectStart,tlsHandshake:t.secureConnectionStart>0?t.connectEnd-t.secureConnectionStart:0,ttfb:t.responseStart-t.requestStart,contentDownload:t.responseEnd-t.responseStart,totalDuration:t.responseEnd-t.startTime,statusCode:n}}
